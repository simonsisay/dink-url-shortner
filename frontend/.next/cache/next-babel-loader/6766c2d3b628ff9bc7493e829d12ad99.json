{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport swr from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\";\n\nvar fetcher = function fetcher() {\n  var res,\n      _args = arguments;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch.apply(void 0, _args));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.json());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar Redirect = function Redirect(_ref) {\n  var initialData = _ref.initialData,\n      apiLink = _ref.apiLink;\n\n  var _useSWR = useSWR(apiLink, fetcher, {\n    initialData: initialData\n  }),\n      data = _useSWR.data;\n\n  console.log(data);\n  return null;\n};\n\nRedirect.getInitialProps = function _callee(_ref2) {\n  var url, apiLink, initialData;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = _ref2.url;\n          apiLink = \"http://localhost:3000/redirect/:\".concat(url);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetcher(url));\n\n        case 4:\n          initialData = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            initialData: initialData,\n            apiLink: apiLink\n          });\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default Redirect;","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["swr","fetch","useSWR","fetcher","res","json","Redirect","initialData","apiLink","data","console","log","getInitialProps","url"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIF,KAAK,MAAL,eADJ;;AAAA;AACRG,UAAAA,GADQ;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA,MAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,gBAC5BN,MAAM,CAACM,OAAD,EAAUL,OAAV,EAAmB;AAAEI,IAAAA,WAAW,EAAXA;AAAF,GAAnB,CADsB;AAAA,MACrCE,IADqC,WACrCA,IADqC;;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,IAAP;AACD,CAJD;;AAMAH,QAAQ,CAACM,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AACnBL,UAAAA,OADmB,6CAC0BK,GAD1B;AAAA;AAAA,2CAECV,OAAO,CAACU,GAAD,CAFR;;AAAA;AAEnBN,UAAAA,WAFmB;AAAA,4CAGlB;AAAEA,YAAAA,WAAW,EAAXA,WAAF;AAAeC,YAAAA,OAAO,EAAPA;AAAf,WAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAMA,eAAeF,QAAf","sourcesContent":["import swr from \"swr\";\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\";\n\nconst fetcher = async (...args) => {\n  const res = await fetch(...args);\n  return res.json();\n};\n\nconst Redirect = ({ initialData, apiLink }) => {\n  const { data } = useSWR(apiLink, fetcher, { initialData });\n  console.log(data);\n  return null;\n};\n\nRedirect.getInitialProps = async ({ url }) => {\n  const apiLink = `http://localhost:3000/redirect/:${url}`;\n  const initialData = await fetcher(url);\n  return { initialData, apiLink };\n};\n\nexport default Redirect;\n"]},"metadata":{},"sourceType":"module"}
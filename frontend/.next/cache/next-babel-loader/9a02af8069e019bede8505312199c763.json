{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\nexport default apolloWrapper = Component => withApollo(({\n  initialState\n}) => {\n  return new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  render: ({\n    _,\n    props\n  }) => __jsx(Component, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))\n});","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js"],"names":["ApolloClient","InMemoryCache","withApollo","apolloWrapper","Component","initialState","uri","cache","restore","render","_","props"],"mappings":";;;;;;AAAA,OAAOA,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAeC,aAAa,GAAGC,SAAS,IACtCF,UAAU,CACR,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAsB;AACpB,SAAO,IAAIL,YAAJ,CAAiB;AACtBM,IAAAA,GAAG,EAAE,+BADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIN,aAAJ,GAAoBO,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CANO,EAOR;AAAEI,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAD,KAAkB,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B,CAPQ,CADZ","sourcesContent":["import ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\n\nexport default apolloWrapper = Component =>\n  withApollo(\n    ({ initialState }) => {\n      return new ApolloClient({\n        uri: \"http://localhost:4000/graphql\",\n        cache: new InMemoryCache().restore(initialState || {})\n      });\n    },\n    { render: ({ _, props }) => <Component {...props} /> }\n  );\n"]},"metadata":{},"sourceType":"module"}
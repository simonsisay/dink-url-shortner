{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetOriginal($short: String!) {\\n    getOriginal(short: $short) {\\n      id\\n      original\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport LinkNotFound from \"../src/component/LinkNotFound\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nvar GET_ORIGINAL = gql(_templateObject());\n\nvar Redirect = function Redirect(_ref) {\n  var client = _ref.client;\n\n  var _useState = useState(true),\n      err = _useState[0],\n      setErr = _useState[1];\n\n  var url = useRouter().query.url;\n  useEffect(function () {\n    var redirect = function redirect() {\n      var _ref2, data;\n\n      return _regeneratorRuntime.async(function redirect$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(client.query({\n                query: GET_ORIGINAL,\n                variables: {\n                  \"short\": url\n                }\n              }));\n\n            case 3:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n\n              if (data) {\n                window.location.replace(data.getOriginal.original);\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    redirect();\n  }, []);\n\n  if (err) {\n    return __jsx(LinkNotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  return null;\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useRouter","LinkNotFound","useState","useEffect","gql","GET_ORIGINAL","Redirect","client","err","setErr","url","query","redirect","variables","data","window","location","replace","getOriginal","original","console","log"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;;AASA,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACTL,QAAQ,CAAC,IAAD,CADC;AAAA,MACxBM,GADwB;AAAA,MACnBC,MADmB;;AAAA,MAEvBC,GAFuB,GAEfV,SAAS,GAAGW,KAFG,CAEvBD,GAFuB;AAI/BP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUL,MAAM,CAACI,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAEN,YAD2B;AAElCQ,gBAAAA,SAAS,EAAE;AAAE,2BAAOH;AAAT;AAFuB,eAAb,CAFV;;AAAA;AAAA;AAELI,cAAAA,IAFK,SAELA,IAFK;;AAMb,kBAAIA,IAAJ,EAAU;AACRC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBH,IAAI,CAACI,WAAL,CAAiBC,QAAzC;AACD;;AARY;AAAA;;AAAA;AAAA;AAAA;AAUbC,cAAAA,OAAO,CAACC,GAAR;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAaAT,IAAAA,QAAQ;AACT,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIJ,GAAJ,EAAS;AACP,WAAO,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAO,IAAP;AACD,CAzBD;;AA2BA,eAAeT,UAAU,CAACO,QAAD,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport LinkNotFound from \"../src/component/LinkNotFound\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({ client }) => {\n  const [err, setErr] = useState(true);\n  const { url } = useRouter().query;\n\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        if (data) {\n          window.location.replace(data.getOriginal.original);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    redirect();\n  }, []);\n\n  if (err) {\n    return <LinkNotFound />;\n  }\n  return null;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
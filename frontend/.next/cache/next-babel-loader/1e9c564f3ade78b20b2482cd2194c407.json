{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\nexport default withApollo(({\n  initialState\n}) => {\n  return new ApolloClient({\n    uri: \"http://localhost:4000/graphql\",\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  render: ({\n    Component,\n    props\n  }) => __jsx(Component, _extends({}, prosp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }))\n});","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js"],"names":["ApolloClient","InMemoryCache","withApollo","initialState","uri","cache","restore","render","Component","props","prosp"],"mappings":";;;;;;AAAA,OAAOA,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAeA,UAAU,CACvB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACpB,SAAO,IAAIH,YAAJ,CAAiB;AACtBI,IAAAA,GAAG,EAAE,+BADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIJ,aAAJ,GAAoBK,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CANsB,EAOvB;AAAEI,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,KAA0B,MAAC,SAAD,eAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC,CAPuB,CAAzB","sourcesContent":["import ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\n\nexport default withApollo(\n  ({ initialState }) => {\n    return new ApolloClient({\n      uri: \"http://localhost:4000/graphql\",\n      cache: new InMemoryCache().restore(initialState || {})\n    });\n  },\n  { render: ({ Component, props }) => <Component {...prosp} /> }\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({\n  data,\n  error\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    const redirect = async () => {\n      console.log(\"here\");\n\n      try {\n        const {\n          data\n        } = await client.query({\n          query: GET_ORIGINAL,\n          variables: {\n            short: url\n          }\n        });\n        console.log(data);\n        return {\n          data: data.getOriginal\n        };\n      } catch (err) {\n        return {\n          error: \"Not found\"\n        };\n      }\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default Redirect;","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useState","useEffect","gql","GET_ORIGINAL","Redirect","data","error","loading","setLoading","redirect","console","log","client","query","variables","short","url","getOriginal","err"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;CAAzB;;AASA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACpC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,UAAI;AACF,cAAM;AAAEN,UAAAA;AAAF,YAAW,MAAMO,MAAM,CAACC,KAAP,CAAa;AAClCA,UAAAA,KAAK,EAAEV,YAD2B;AAElCW,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAEC;AAAT;AAFuB,SAAb,CAAvB;AAIAN,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAI,CAACY;AAAb,SAAP;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,eAAO;AAAEZ,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD;AACF,KAZD;;AAaAG,IAAAA,QAAQ;AACT,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAxBD;;AA0BA,eAAeH,QAAf","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({ data, error }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const redirect = async () => {\n      console.log(\"here\");\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n        return { data: data.getOriginal };\n      } catch (err) {\n        return { error: \"Not found\" };\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default Redirect;\n"]},"metadata":{},"sourceType":"module"}
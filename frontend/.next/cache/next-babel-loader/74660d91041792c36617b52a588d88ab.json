{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/src/screens/HomePage/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Container } from \"./styles\";\nimport { ThemeContext } from \"../../context/Theme\";\nimport ThemeSwitcher from \"../../component/ThemeSwitcher\";\nimport { CREATE_SHORT_URL } from \"./queries\";\n\nvar HomePage = function HomePage(_ref) {\n  var client = _ref.client;\n\n  var _useContext = useContext(ThemeContext),\n      switchTheme = _useContext.switchTheme,\n      currentTheme = _useContext.currentTheme;\n\n  var _useState = useState(\"\"),\n      originalUrl = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState(undefined),\n      newUrl = _useState2[0],\n      setNewUrl = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setUrl(e.target.value);\n  };\n\n  var getShortUrl = function getShortUrl() {\n    var _ref2, data;\n\n    return _regeneratorRuntime.async(function getShortUrl$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(client.mutate({\n              mutation: CREATE_SHORT_URL,\n              variables: {\n                original: originalUrl\n              }\n            }));\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            setUrl(\"\");\n            setNewUrl(\"https://dink.com/\".concat(data.createLink[\"short\"]));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  return __jsx(Container, {\n    currentTheme: currentTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"switch-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(ThemeSwitcher, {\n    changeTheme: switchTheme,\n    currentTheme: currentTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"left-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"logo archivo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Dink Url shortner\"), __jsx(\"h4\", {\n    className: \"sub-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Get your tiny url in seconds. Copy and paste the url here and we will give you a short and sweet one. All for $0.\"), __jsx(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"originalUrl\",\n    onChange: handleChange,\n    placeholder: \"Paste your link here...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: getShortUrl,\n    className: \"send-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Shorten\")), newUrl && __jsx(\"p\", {\n    className: \"new-url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"New Link: \", __jsx(\"a\", {\n    href: newUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, newUrl))), __jsx(\"div\", {\n    className: \"right-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"hero-image\",\n    src: currentTheme === \"light\" ? require(\"../../../assets/images/hero-image.png\") : require(\"../../../assets/images/hugo-bad.png\"),\n    alt: \"hero-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nexport default withApollo(HomePage);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/src/screens/HomePage/index.jsx"],"names":["React","useContext","useState","withApollo","Container","ThemeContext","ThemeSwitcher","CREATE_SHORT_URL","HomePage","client","switchTheme","currentTheme","originalUrl","setUrl","undefined","newUrl","setNewUrl","handleChange","e","target","value","getShortUrl","mutate","mutation","variables","original","data","createLink","console","log","require"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport { Container } from \"./styles\";\nimport { ThemeContext } from \"../../context/Theme\";\nimport ThemeSwitcher from \"../../component/ThemeSwitcher\";\nimport { CREATE_SHORT_URL } from \"./queries\";\n\nconst HomePage = ({ client }) => {\n  const { switchTheme, currentTheme } = useContext(ThemeContext);\n  const [originalUrl, setUrl] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(undefined);\n\n  const handleChange = e => {\n    setUrl(e.target.value);\n  };\n\n  const getShortUrl = async () => {\n    try {\n      const { data } = await client.mutate({\n        mutation: CREATE_SHORT_URL,\n        variables: { original: originalUrl }\n      });\n      setUrl(\"\");\n      setNewUrl(`https://dink.com/${data.createLink.short}`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container currentTheme={currentTheme}>\n      <div className=\"switch-container\">\n        <ThemeSwitcher changeTheme={switchTheme} currentTheme={currentTheme} />\n      </div>\n      <div className=\"content\">\n        <div className=\"left-content\">\n          <h1 className=\"logo archivo\">Dink Url shortner</h1>\n          <h4 className=\"sub-text\">\n            Get your tiny url in seconds. Copy and paste the url here and we\n            will give you a short and sweet one. All for $0.\n          </h4>\n          <div className=\"form\">\n            <input\n              name=\"originalUrl\"\n              onChange={handleChange}\n              placeholder=\"Paste your link here...\"\n            />\n            <button onClick={getShortUrl} className=\"send-button\">\n              Shorten\n            </button>\n          </div>\n          {newUrl && (\n            <p className=\"new-url\">\n              New Link: <a href={newUrl}>{newUrl}</a>\n            </p>\n          )}\n        </div>\n        <div className=\"right-content\">\n          <img\n            className=\"hero-image\"\n            src={\n              currentTheme === \"light\"\n                ? require(\"../../../assets/images/hero-image.png\")\n                : require(\"../../../assets/images/hugo-bad.png\")\n            }\n            alt=\"hero-image\"\n          />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default withApollo(HomePage);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { withRouter } from \"next/router\";\n\nconst Redirect = props => {\n  const {\n    url\n  } = useRouter();\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"hey\");\n};\n\nRedirect.getInitialProps = async ({\n  url,\n  client\n}) => {\n  console.log(url); // try {\n  //   const { data } = await client.query({\n  //     query: GET_ORIGINAL,\n  //     variables: { short: url }\n  //   });\n  //   console.log(data);\n  //   return { data: data.getOriginal };\n  // } catch (err) {\n  //   return { error: \"Not found\" };\n  // }\n\n  return {};\n};\n\nexport default withRouter(withApollo(Redirect));","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","withRouter","Redirect","props","url","useRouter","getInitialProps","client","console","log"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAUC,SAAS,EAAzB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;AAMAH,QAAQ,CAACI,eAAT,GAA2B,OAAO;AAAEF,EAAAA,GAAF;AAAOG,EAAAA;AAAP,CAAP,KAA2B;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EADoD,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,EAAP;AACD,CAbD;;AAeA,eAAeH,UAAU,CAACD,UAAU,CAACE,QAAD,CAAX,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { withRouter } from \"next/router\";\n\nconst Redirect = props => {\n  const { url } = useRouter();\n\n  return <h1>hey</h1>;\n};\n\nRedirect.getInitialProps = async ({ url, client }) => {\n  console.log(url);\n  // try {\n  //   const { data } = await client.query({\n  //     query: GET_ORIGINAL,\n  //     variables: { short: url }\n  //   });\n  //   console.log(data);\n  //   return { data: data.getOriginal };\n  // } catch (err) {\n  //   return { error: \"Not found\" };\n  // }\n  return {};\n};\n\nexport default withRouter(withApollo(Redirect));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { withApollo } from \"react-apollo\";\n\nconst Redirect = props => {\n  console.log(props);\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"hey\");\n};\n\nRedirect.getInitialProps = async ({\n  url,\n  client\n}) => {\n  console.log(url);\n\n  try {\n    const {\n      data\n    } = await client.query({\n      query: GET_ORIGINAL,\n      variables: {\n        short: url\n      }\n    });\n    console.log(data);\n    return {\n      data: data.getOriginal\n    };\n  } catch (err) {\n    return {\n      error: \"Not found\"\n    };\n  }\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["fetch","withApollo","Redirect","props","console","log","getInitialProps","url","client","data","query","GET_ORIGINAL","variables","short","getOriginal","err","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAHD;;AAKAD,QAAQ,CAACI,eAAT,GAA2B,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA2B;AACpDJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMD,MAAM,CAACE,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAEC,YAD2B;AAElCC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEN;AAAT;AAFuB,KAAb,CAAvB;AAIAH,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,WAAO;AAAEA,MAAAA,IAAI,EAAEA,IAAI,CAACK;AAAb,KAAP;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAP;AACD;AACF,CAZD;;AAcA,eAAef,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { withApollo } from \"react-apollo\";\n\nconst Redirect = props => {\n  console.log(props);\n  return <h1>hey</h1>;\n};\n\nRedirect.getInitialProps = async ({ url, client }) => {\n  console.log(url);\n  try {\n    const { data } = await client.query({\n      query: GET_ORIGINAL,\n      variables: { short: url }\n    });\n    console.log(data);\n    return { data: data.getOriginal };\n  } catch (err) {\n    return { error: \"Not found\" };\n  }\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
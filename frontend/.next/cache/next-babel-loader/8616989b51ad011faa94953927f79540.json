{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport LinkNotFound from \"../src/component/LinkNotFound\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({\n  client\n}) => {\n  const {\n    0: err,\n    1: setErr\n  } = useState(true);\n  const {\n    0: redirecting,\n    1: setRedirecting\n  } = useState(true);\n  const {\n    url\n  } = useRouter().query;\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const {\n          data\n        } = await client.query({\n          query: GET_ORIGINAL,\n          variables: {\n            short: url\n          }\n        });\n\n        if (data) {\n          window.location.replace(data.getOriginal.original);\n        }\n      } catch (err) {\n        setRedirecting(false);\n        setError(true);\n      }\n    };\n\n    redirect();\n  }, []);\n\n  if (redirecting) {\n    return null;\n  }\n\n  if (err) {\n    return __jsx(LinkNotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n  return null;\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useRouter","LinkNotFound","useState","useEffect","gql","GET_ORIGINAL","Redirect","client","err","setErr","redirecting","setRedirecting","url","query","redirect","data","variables","short","window","location","replace","getOriginal","original","setError"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;CAAzB;;AASA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBP,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAUZ,SAAS,GAAGa,KAA5B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,MAAM,CAACM,KAAP,CAAa;AAClCA,UAAAA,KAAK,EAAER,YAD2B;AAElCW,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAEL;AAAT;AAFuB,SAAb,CAAvB;;AAIA,YAAIG,IAAJ,EAAU;AACRG,UAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBL,IAAI,CAACM,WAAL,CAAiBC,QAAzC;AACD;AACF,OARD,CAQE,OAAOd,GAAP,EAAY;AACZG,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAY,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAbD;;AAcAT,IAAAA,QAAQ;AACT,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIJ,WAAJ,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAIF,GAAJ,EAAS;AACP,WAAO,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAO,IAAP;AACD,CA/BD;;AAiCA,eAAeT,UAAU,CAACO,QAAD,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport LinkNotFound from \"../src/component/LinkNotFound\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({ client }) => {\n  const [err, setErr] = useState(true);\n  const [redirecting, setRedirecting] = useState(true);\n  const { url } = useRouter().query;\n\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        if (data) {\n          window.location.replace(data.getOriginal.original);\n        }\n      } catch (err) {\n        setRedirecting(false);\n        setError(true);\n      }\n    };\n    redirect();\n  }, []);\n\n  if (redirecting) {\n    return null;\n  }\n\n  if (err) {\n    return <LinkNotFound />;\n  }\n  return null;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
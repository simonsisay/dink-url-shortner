{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({\n  client\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    url\n  } = useRouter();\n  useEffect(() => {\n    const redirect = async () => {\n      console.log(url);\n\n      try {\n        const {\n          data\n        } = await client.query({\n          query: GET_ORIGINAL,\n          variables: {\n            short: url\n          }\n        });\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useRouter","useState","useEffect","gql","GET_ORIGINAL","Redirect","client","loading","setLoading","url","redirect","console","log","data","query","variables","short","err"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;CAAzB;;AASA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUT,SAAS,EAAzB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AACA,UAAI;AACF,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMP,MAAM,CAACQ,KAAP,CAAa;AAClCA,UAAAA,KAAK,EAAEV,YAD2B;AAElCW,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAEP;AAAT;AAFuB,SAAb,CAAvB;AAIAE,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,OAND,CAME,OAAOI,GAAP,EAAY;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD;AACF,KAXD;;AAYAP,IAAAA,QAAQ;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIH,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAxBD;;AA0BA,eAAeR,UAAU,CAACM,QAAD,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({ client }) => {\n  const [loading, setLoading] = useState(true);\n  const { url } = useRouter();\n\n  useEffect(() => {\n    const redirect = async () => {\n      console.log(url);\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
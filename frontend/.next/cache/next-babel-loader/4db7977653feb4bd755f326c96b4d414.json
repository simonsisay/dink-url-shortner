{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetOriginal($short: String!) {\\n    getOriginal(short: $short) {\\n      id\\n      original\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nvar GET_ORIGINAL = gql(_templateObject());\n\nvar Redirect = function Redirect(_ref) {\n  var client = _ref.client;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useRouter = useRouter(),\n      url = _useRouter.url;\n\n  useEffect(function () {\n    var redirect = function redirect() {\n      var _ref2, data;\n\n      return _regeneratorRuntime.async(function redirect$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(url);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(client.query({\n                query: GET_ORIGINAL,\n                variables: {\n                  \"short\": url\n                }\n              }));\n\n            case 4:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              console.log(data);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useRouter","useState","useEffect","gql","GET_ORIGINAL","Redirect","client","loading","setLoading","url","redirect","console","log","query","variables","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;;AASA,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACDL,QAAQ,CAAC,IAAD,CADP;AAAA,MACxBM,OADwB;AAAA,MACfC,UADe;;AAAA,mBAEfR,SAAS,EAFM;AAAA,MAEvBS,GAFuB,cAEvBA,GAFuB;;AAI/BP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AADe;AAAA;AAAA,+CAGUH,MAAM,CAACO,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAET,YAD2B;AAElCU,gBAAAA,SAAS,EAAE;AAAE,2BAAOL;AAAT;AAFuB,eAAb,CAHV;;AAAA;AAAA;AAGLM,cAAAA,IAHK,SAGLA,IAHK;AAObJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAPa;AAAA;;AAAA;AAAA;AAAA;AASbJ,cAAAA,OAAO,CAACC,GAAR;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAYAF,IAAAA,QAAQ;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIH,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAxBD;;AA0BA,eAAeR,UAAU,CAACM,QAAD,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = ({ client }) => {\n  const [loading, setLoading] = useState(true);\n  const { url } = useRouter();\n\n  useEffect(() => {\n    const redirect = async () => {\n      console.log(url);\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\nconst GET_ORIGINAL = gql`\n  GetOriginal($short:String!){\n     getOriginal(short:$short){\n       id\n       original\n       \n     }\n  }\n`;\n\nconst Redirect = ({\n  data,\n  error\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const {\n          data\n        } = await client.query({\n          query: GET_ORIGINAL,\n          variables: {\n            short: url\n          }\n        });\n        console.log(data);\n        return {\n          data: data.getOriginal\n        };\n      } catch (err) {\n        return {\n          error: \"Not found\"\n        };\n      }\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default Redirect;","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useState","useEffect","GET_ORIGINAL","gql","Redirect","data","error","loading","setLoading","redirect","client","query","variables","short","url","console","log","getOriginal","err"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,YAAY,GAAGC,GAAI;;;;;;;;CAAzB;;AAUA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACpC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAAEJ,UAAAA;AAAF,YAAW,MAAMK,MAAM,CAACC,KAAP,CAAa;AAClCA,UAAAA,KAAK,EAAET,YAD2B;AAElCU,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAEC;AAAT;AAFuB,SAAb,CAAvB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAI,CAACY;AAAb,SAAP;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,eAAO;AAAEZ,UAAAA,KAAK,EAAE;AAAT,SAAP;AACD;AACF,KAXD;;AAYAG,IAAAA,QAAQ;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAvBD;;AAyBA,eAAeH,QAAf","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\n\nconst GET_ORIGINAL = gql`\n  GetOriginal($short:String!){\n     getOriginal(short:$short){\n       id\n       original\n       \n     }\n  }\n`;\n\nconst Redirect = ({ data, error }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n        return { data: data.getOriginal };\n      } catch (err) {\n        return { error: \"Not found\" };\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default Redirect;\n"]},"metadata":{},"sourceType":"module"}
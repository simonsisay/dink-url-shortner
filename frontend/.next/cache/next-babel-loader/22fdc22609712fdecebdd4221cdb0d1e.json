{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query GetOriginal($short: String!) {\\n    getOriginal(short: $short) {\\n      original\\n      short\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { withApollo } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nvar GET_ORIGINAL_URL = gql(_templateObject());\n\nvar Redirect = function Redirect(_ref) {\n  var client = _ref.client;\n  var routes = useRouter();\n  var getOriginalUrl = useCallback(function _callee() {\n    var _ref2, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(client.query({\n              query: GET_ORIGINAL_URL,\n              variables: {\n                \"short\": router.query.url\n              }\n            }));\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            console.log(data);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  }, []);\n  useEffect(function () {\n    getOriginalUrl();\n  }, []);\n  return null;\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["useEffect","useRouter","withApollo","gql","GET_ORIGINAL_URL","Redirect","client","routes","getOriginalUrl","useCallback","query","variables","router","url","data","console","log","message"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,IAAMC,gBAAgB,GAAGD,GAAH,mBAAtB;;AAUA,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,MAAMO,cAAc,GAAGC,WAAW,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAERH,MAAM,CAACI,KAAP,CAAa;AAClCA,cAAAA,KAAK,EAAEN,gBAD2B;AAElCO,cAAAA,SAAS,EAAE;AAAE,yBAAOC,MAAM,CAACF,KAAP,CAAaG;AAAtB;AAFuB,aAAb,CAFQ;;AAAA;AAAA;AAEvBC,YAAAA,IAFuB,SAEvBA,IAFuB;AAM/BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAN+B;AAAA;;AAAA;AAAA;AAAA;AAQ/BC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAU/B,EAV+B,CAAlC;AAYAjB,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,IAAP;AACD,CApBD;;AAsBA,eAAeN,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { withApollo } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL_URL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      original\n      short\n      id\n    }\n  }\n`;\n\nconst Redirect = ({ client }) => {\n  const routes = useRouter();\n\n  const getOriginalUrl = useCallback(async () => {\n    try {\n      const { data } = await client.query({\n        query: GET_ORIGINAL_URL,\n        variables: { short: router.query.url }\n      });\n      console.log(data);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    getOriginalUrl();\n  }, []);\n\n  return null;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
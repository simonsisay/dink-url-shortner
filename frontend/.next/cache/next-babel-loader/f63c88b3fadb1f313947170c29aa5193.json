{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { withApollo } from \"react-apollo\";\n\nvar Redirect = function Redirect(props) {\n  console.log(props);\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"hey\");\n};\n\nRedirect.getInitialProps = function _callee(_ref) {\n  var url, client, _ref2, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = _ref.url, client = _ref.client;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(client.query({\n            query: GET_ORIGINAL,\n            variables: {\n              \"short\": url\n            }\n          }));\n\n        case 4:\n          _ref2 = _context.sent;\n          data = _ref2.data;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            data: data.getOriginal\n          });\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", {\n            error: \"Not found\"\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 10]]);\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["fetch","withApollo","Redirect","props","console","log","getInitialProps","url","client","query","GET_ORIGINAL","variables","data","getOriginal","error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAHD;;AAKAD,QAAQ,CAACI,eAAT,GAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT,EAAcC,MAAd,QAAcA,MAAd;AAAA;AAAA;AAAA,2CAEAA,MAAM,CAACC,KAAP,CAAa;AAClCA,YAAAA,KAAK,EAAEC,YAD2B;AAElCC,YAAAA,SAAS,EAAE;AAAE,uBAAOJ;AAAT;AAFuB,WAAb,CAFA;;AAAA;AAAA;AAEfK,UAAAA,IAFe,SAEfA,IAFe;AAMvBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AANuB,2CAOhB;AAAEA,YAAAA,IAAI,EAAEA,IAAI,CAACC;AAAb,WAPgB;;AAAA;AAAA;AAAA;AAAA,2CAShB;AAAEC,YAAAA,KAAK,EAAE;AAAT,WATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAaA,eAAeb,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { withApollo } from \"react-apollo\";\n\nconst Redirect = props => {\n  console.log(props);\n  return <h1>hey</h1>;\n};\n\nRedirect.getInitialProps = async ({ url, client }) => {\n  try {\n    const { data } = await client.query({\n      query: GET_ORIGINAL,\n      variables: { short: url }\n    });\n    console.log(data);\n    return { data: data.getOriginal };\n  } catch (err) {\n    return { error: \"Not found\" };\n  }\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\nexport default apolloWrapper = function apolloWrapper(Component) {\n  return withApollo(function (_ref) {\n    var initialState = _ref.initialState;\n    return new ApolloClient({\n      uri: \"http://localhost:4000/graphql\",\n      cache: new InMemoryCache().restore(initialState || {})\n    });\n  }, {\n    render: function render(_ref2) {\n      var _ = _ref2._,\n          props = _ref2.props;\n      return __jsx(Component, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n    }\n  });\n};","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/apolloConfig.js"],"names":["ApolloClient","InMemoryCache","withApollo","apolloWrapper","Component","initialState","uri","cache","restore","render","_","props"],"mappings":";;;;AAAA,OAAOA,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,eAAeC,aAAa,GAAG,uBAAAC,SAAS;AAAA,SACtCF,UAAU,CACR,gBAAsB;AAAA,QAAnBG,YAAmB,QAAnBA,YAAmB;AACpB,WAAO,IAAIL,YAAJ,CAAiB;AACtBM,MAAAA,GAAG,EAAE,+BADiB;AAEtBC,MAAAA,KAAK,EAAE,IAAIN,aAAJ,GAAoBO,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,KAAjB,CAAP;AAID,GANO,EAOR;AAAEI,IAAAA,MAAM,EAAE;AAAA,UAAGC,CAAH,SAAGA,CAAH;AAAA,UAAMC,KAAN,SAAMA,KAAN;AAAA,aAAkB,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlB;AAAA;AAAV,GAPQ,CAD4B;AAAA,CAAxC","sourcesContent":["import ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport withApollo from \"next-with-apollo\";\n\nexport default apolloWrapper = Component =>\n  withApollo(\n    ({ initialState }) => {\n      return new ApolloClient({\n        uri: \"http://localhost:4000/graphql\",\n        cache: new InMemoryCache().restore(initialState || {})\n      });\n    },\n    { render: ({ _, props }) => <Component {...props} /> }\n  );\n"]},"metadata":{},"sourceType":"module"}
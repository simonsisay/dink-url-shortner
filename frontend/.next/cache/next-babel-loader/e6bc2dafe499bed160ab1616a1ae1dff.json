{"ast":null,"code":"var _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    url\n  } = useRouter();\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const {\n          data\n        } = await client.query({\n          query: GET_ORIGINAL,\n          variables: {\n            short: url\n          }\n        });\n        console.log(data);\n        return {\n          data: data.getOriginal\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default withApollo(Redirect);","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useRouter","useState","useEffect","gql","GET_ORIGINAL","Redirect","loading","setLoading","url","redirect","data","client","query","variables","short","console","log","getOriginal","err"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;CAAzB;;AASA,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAUR,SAAS,EAAzB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMC,MAAM,CAACC,KAAP,CAAa;AAClCA,UAAAA,KAAK,EAAER,YAD2B;AAElCS,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAEN;AAAT;AAFuB,SAAb,CAAvB;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,eAAO;AAAEA,UAAAA,IAAI,EAAEA,IAAI,CAACO;AAAb,SAAP;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD;AACF,KAXD;;AAYAT,IAAAA,QAAQ;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIH,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAxBD;;AA0BA,eAAeP,UAAU,CAACM,QAAD,CAAzB","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_ORIGINAL = gql`\n  query GetOriginal($short: String!) {\n    getOriginal(short: $short) {\n      id\n      original\n    }\n  }\n`;\n\nconst Redirect = () => {\n  const [loading, setLoading] = useState(true);\n  const { url } = useRouter();\n\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n        return { data: data.getOriginal };\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default withApollo(Redirect);\n"]},"metadata":{},"sourceType":"module"}
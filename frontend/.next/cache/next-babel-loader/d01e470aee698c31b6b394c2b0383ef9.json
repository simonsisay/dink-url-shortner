{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  GetOriginal($short:String!){\\n     getOriginal(short:$short){\\n       id\\n       original\\n       \\n     }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\nvar GET_ORIGINAL = gql(_templateObject());\n\nvar Redirect = function Redirect(_ref) {\n  var data = _ref.data,\n      error = _ref.error;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    var redirect = function redirect() {\n      var _ref2, _data;\n\n      return _regeneratorRuntime.async(function redirect$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(client.query({\n                query: GET_ORIGINAL,\n                variables: {\n                  \"short\": url\n                }\n              }));\n\n            case 3:\n              _ref2 = _context.sent;\n              _data = _ref2.data;\n              console.log(_data);\n              return _context.abrupt(\"return\", {\n                data: _data.getOriginal\n              });\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                error: \"Not found\"\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    };\n\n    redirect();\n  }, []);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"hey\");\n};\n\nexport default Redirect;","map":{"version":3,"sources":["/home/simon/Desktop/Projects/dink-url-shortner/frontend/pages/[url].js"],"names":["withApollo","useState","useEffect","GET_ORIGINAL","gql","Redirect","data","error","loading","setLoading","redirect","client","query","variables","url","console","log","getOriginal"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAMC,YAAY,GAAGC,GAAH,mBAAlB;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACNN,QAAQ,CAAC,IAAD,CADF;AAAA,MAC7BO,OAD6B;AAAA,MACpBC,UADoB;;AAGpCP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUC,MAAM,CAACC,KAAP,CAAa;AAClCA,gBAAAA,KAAK,EAAET,YAD2B;AAElCU,gBAAAA,SAAS,EAAE;AAAE,2BAAOC;AAAT;AAFuB,eAAb,CAFV;;AAAA;AAAA;AAELR,cAAAA,KAFK,SAELA,IAFK;AAMbS,cAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AANa,+CAON;AAAEA,gBAAAA,IAAI,EAAEA,KAAI,CAACW;AAAb,eAPM;;AAAA;AAAA;AAAA;AAAA,+CASN;AAAEV,gBAAAA,KAAK,EAAE;AAAT,eATM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAYAG,IAAAA,QAAQ;AACT,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAvBD;;AAyBA,eAAeH,QAAf","sourcesContent":["import { withApollo } from \"react-apollo\";\nimport { useState, useEffect } from \"react\";\n\nconst GET_ORIGINAL = gql`\n  GetOriginal($short:String!){\n     getOriginal(short:$short){\n       id\n       original\n       \n     }\n  }\n`;\n\nconst Redirect = ({ data, error }) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const redirect = async () => {\n      try {\n        const { data } = await client.query({\n          query: GET_ORIGINAL,\n          variables: { short: url }\n        });\n        console.log(data);\n        return { data: data.getOriginal };\n      } catch (err) {\n        return { error: \"Not found\" };\n      }\n    };\n    redirect();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return <h1>hey</h1>;\n};\n\nexport default Redirect;\n"]},"metadata":{},"sourceType":"module"}